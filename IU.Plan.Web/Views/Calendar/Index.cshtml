@model CalendarViewModel
@using IU.Plan.Web.Models

@{
    ViewBag.Title = "Календарь";

    var today = DateTime.Today;
    var count = 0;

    var prev = Model.StartDay.AddMonths(-1);
    var next = Model.StartDay.AddMonths(1);

    var colStart = Model.StartDay.DayOfWeek.ToInt() - 1;
}
<style>
    .overtext {
        text-overflow: ellipsis;
        overflow: hidden;
        max-width: 80px;
    }
</style>
@helper PrintEvents(int dayNumber, DateTime today)
{
    <div>
        @if (dayNumber < Model.Limit)
        {
            DateTime day = new DateTime(today.Year, today.Month, dayNumber, 0, 0, 0);

            var dayEvents = Model.Events.Where(evt => evt.StartDate == day);
            foreach (var dayEvent in dayEvents)
            {
                <div>
                    <a href="#" class="btn btn-primary btn-xs overtext" title="@dayEvent.Title" onclick="getDetails('@dayEvent.Uid')">
                        @dayEvent.Title
                    </a>
                </div>
            }
        }
    </div>
}

@helper PrintCell(int count, DateTime today)
{
    var tdClass = Model.StartDay.AddDays(count - 1) == today ? "bg-danger" : "";
    <td class="@(tdClass)">
        @(count <= Model.Limit ? $"{count}" : "")
        @PrintEvents(count, today)
    </td>
}

<script type="text/javascript">
    function getDetails(uid) {
        $.ajax({
            url: '/Event/MiniDetails?uid=' + uid,
            success: function (data) {
                $('#MiniDetailsResult').html(data);

                $("#MiniDetailsResult").dialog({
                    modal: true,
                    width: 'auto',
                    buttons: {
                        "Редактировать": function () {
                            $(this).dialog("close");
                            openEditPopup(uid);
                        },
                        Ok: function () {
                            $(this).dialog("close");
                        }
                    }
                });
            }
        });

    }

    function saveEvent(callback) {
        $.ajax({
            url: '/Event/Save',
            type: 'post',
            data: $('form#eventSaveForm').serialize(),
            success: function (data) {
                $('#EditPopup').html(data);
                if (callback) {
                    setTimeout(callback, 1 * 1000);
                }
            }
        });
    }

    function openEditPopup(uid) {

        $.ajax({
            url: '/Event/Edit?uid=' + uid,
            success: function (data) {
                $('#EditPopup').html(data);
                var editPopup = $("#EditPopup").dialog({
                    modal: true,
                    width: 'auto',
                    buttons: {
                        "Сохранить": function () {
                            saveEvent(function () {
                                editPopup.dialog("close");
                                document.location.reload();
                            });
                        },
                        Cancel: function () {
                            $(this).dialog("close");
                        }
                    },
                    close: function () {
                        //form[0].reset();
                    }
                });
            }
        });

    }
</script>

<h2>
    Календарь
    @Model.StartDay.ToString("MMMM")
    @Model.StartDay.Year
</h2>

<div class="row">
    <div class="col-md-8">
        <nav aria-label="...">
            <ul class="pager">
                <li class="previous"><a href="@Url.Action("Index", new { year = prev.Year, month = prev.Month })"><span aria-hidden="true">&larr;</span> Туда</a></li>
                <li class="today"><a href="@Url.Action("Index", new { year = today.Year, month = today.Month })">Сегодня</a></li>
                <li class="next"><a href="@Url.Action("Index", new { year = next.Year, month = next.Month })">Сюда <span aria-hidden="true">&rarr;</span></a></li>
            </ul>
        </nav>
    </div>
    <div class="col-md-4">
        <form class="form-inline">
            <div class="form-group">
                <input type="search" class="form-control" id="search" placeholder="найти...">
            </div>
            <button type="submit" class="btn btn-default">go</button>
        </form>
    </div>
</div>

<div class="row">
    <div class="col-md-8">
        <table class="table table-hover table-bordered">
            <thead>
                <tr>
                    <th style="width:14%">ПН</th>
                    <th style="width:14%">ВТ</th>
                    <th style="width:14%">СР</th>
                    <th style="width:14%">ЧТ</th>
                    <th style="width:14%">ПТ</th>
                    <th style="width:15%">СБ</th>
                    <th style="width:15%">ВС</th>
                </tr>
            </thead>
            <tbody>
                @for (int i = 0; i < Model.RowCount; i++)
                {
                    var start = i == 0 ? colStart : 0;
                    <tr data-info="@start  @Model.ColCount">
                        @for (int j = 0; j < start; j++)
                        {
                            <td></td>
                        }
                        @for (int j = start; j < Model.ColCount; j++)
                        {
                            @PrintCell(++count, today)
                        }
                    </tr>
                }
            </tbody>
        </table>

    </div>

    <div class="col-md-4">
        <ul class="list-group">
            <li class="list-group-item">
                task
            </li>
            <li class="list-group-item">
                task
            </li>
            <li class="list-group-item">
                task
            </li>
            <li class="list-group-item"></li>
            <li class="list-group-item">
                task
            </li>
        </ul>
    </div>
</div>
<div id="MiniDetailsResult">

</div>
<div id="EditPopup">

</div>